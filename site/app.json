[{"name":"app.R","content":"\r\n library(shiny) \r\n library(ggplot2) \r\n library(shinythemes) \r\n library(ggthemes) \r\n library(DT)\r\n\r\n # Load list of models \r\n load(file=\"models.RData\") \r\n lv.malli.value<-as.character(seq(tmp.mallit)) \r\n names(lv.malli.value)<-sapply(tmp.mallit,function(x){as.character(formula(x))[3]}) \r\n tmp.dt.AIC<-data.frame(Model=sapply(tmp.mallit,function(x){as.character(formula(x))[3]}),\r\n                                      AIC=sapply(tmp.mallit,function(x)AIC(x))) \r\n tmp.dt.AIC<-tmp.dt.AIC[order(tmp.dt.AIC$AIC),] \r\n tmp.dt.AIC$Relative.likelihood<-exp((tmp.dt.AIC$AIC[1]-tmp.dt.AIC$AIC)/2) \r\n # Time variable name \r\n lv.i.coxph<-sum(class(tmp.mallit[[1]])%in%'coxph') \r\n lv.time<-gsub(x=strsplit(x=strsplit(x=as.character(formula(tmp.mallit[[1]]))[2],split = \"\\\\(\")[[1]][2],\r\n                          split=\",\")[[1]][1],pattern = \"\\\\)\",replacement = \"\") \r\n # X-variable names \r\n tmp.otsikko<-names(tmp.mallit) \r\n if(is.null(tmp.otsikko)){Models.otsikko<-paste0(\"Model \",seq(length(tmp.mallit)))} \r\n if(!is.null(tmp.otsikko)){Models.otsikko<-ifelse(tmp.otsikko==\"\",paste0(\"Model \",seq(length(tmp.mallit))),tmp.otsikko)} \r\n # Osa 1 loppu \r\nlv.xvars<-c(\"SEX\", \"Age_Group\", \"Obesity\", \"PhysActiv\", \"KnowFeeding\")\r\n# Osa 1A alku \r\n # Data frame containing predictions \r\n tee.dt<-function(input){ \r\n     lv.dt<-expand.grid( \r\n # Osa 1A loppu \r\nSEX=factor(input$SEX,levels=c(\"Male\",\"Female\")),\r\nAge_Group=factor(input$Age_Group,levels=c(\"<1yo\",\"1-2yo\",\"3-4yo\")),\r\nObesity=factor(input$Obesity,levels=c(\"No\",\"Yes\")),\r\nPhysActiv=factor(input$PhysActiv,levels=c(\"No\",\"Yes\")),\r\nKnowFeeding=factor(input$KnowFeeding,levels=c(\"Low\",\"Intermediate\",\"High\"))# Osa 2 alku \r\n     ) \r\n     lv.class<-class(tmp.mallit[[as.numeric(input$Model)]]) \r\n     if(sum(lv.class%in%\"coxph\")>0){ \r\n         lv.pred<-predict(tmp.mallit[[as.numeric(input$Model)]],newdata=lv.dt,se.fit = TRUE,type=\"survival\") \r\n     } \r\n     if(sum(lv.class%in%c(\"lm\",\"glm\"))>0){lv.pred<-predict(tmp.mallit[[as.numeric(input$Model)]],newdata=lv.dt,se.fit = TRUE,type=\"response\")} \r\n     lv.dt$Predicted<-lv.pred$fit \r\n     lv.dt$se.fit<-lv.pred$se.fit \r\n     lv.dt$Predicted.lo<-lv.pred$fit-1.96*lv.pred$se.fit \r\n     lv.dt$Predicted.hi<-lv.pred$fit+1.96*lv.pred$se.fit \r\n     if(sum(lv.class%in%\"coxph\")>0){ \r\n          lv.dt$Predicted.lo<-ifelse(lv.dt$Predicted.lo<0,0,lv.dt$Predicted.lo) \r\n      } \r\n     lv.dt \r\n } \r\n # Define UI for application that draws a histogram \r\n ui <- fluidPage(theme = shinytheme( \r\n \"readable\"), \r\n     # Application title \r\n     titlePanel( \r\n \"Neurodevelopmental disorder in Children\"), \r\n     # Sidebar with a slider input \r\n     sidebarLayout( \r\n         sidebarPanel( \r\n             #textAreaInput(\"AddPlot\",label=\"Add plot script\",value=\"\",rows=3), \r\n             #actionButton(\"Toteuta\", label=\"Submit\"), \r\n             radioButtons(\"Model\",label=\"Select model\", \r\n                              choices=lv.malli.value,inline=FALSE), \r\n             # Osa 2 loppu \r\nradioButtons(inputId=\"SEX\", label=\"Sex\",\r\n choices=c(\"Male\"=\"Male\",\"Female\"=\"Female\"), selected = \"Male\"),\r\nradioButtons(inputId=\"Age_Group\", label=\"Age (groups)\",\r\n choices=c(\"<1yo\"=\"<1yo\",\"1-2yo\"=\"1-2yo\",\"3-4yo\"=\"3-4yo\"), selected = \"<1yo\"),\r\nradioButtons(inputId=\"Obesity\", label=\"Obesity\",\r\n choices=c(\"No\"=\"No\",\"Yes\"=\"Yes\"), selected = \"No\"),\r\nradioButtons(inputId=\"PhysActiv\", label=\"Physical Activity\",\r\n choices=c(\"No\"=\"No\",\"Yes\"=\"Yes\"), selected = \"No\"),\r\nradioButtons(inputId=\"KnowFeeding\", label=\"Knowledge on Feeding\",\r\n choices=c(\"Low\"=\"Low\",\"Intermediate\"=\"Intermediate\",\"High\"=\"High\"), selected = \"Low\"),            # Osa 3 alku \r\n         ), \r\n         mainPanel( \r\n             tabsetPanel(id='tabs', \r\n                 tabPanel(\"Plot\",plotOutput(\"distPlot\")), \r\n                 tabPanel(\"Data\", dataTableOutput(\"Data\")), \r\n                tabPanel(\"Summary\", verbatimTextOutput(\"Summary\")), \r\n                 tabPanel(\"AIC\", htmlOutput(\"AICTab\")), \r\n                 tabPanel(\"Info\",htmlOutput(\"Info\")) \r\n         ) \r\n     ) \r\n )) \r\n # Define server logic required to draw a histogram \r\n server <- function(input, output, session) { \r\n  \r\n     output$distPlot <- renderPlot({ \r\n         tmp.dt<-tee.dt(input) \r\n         #browser()\r\n         colore<-hsv(runif(1), 1, 1)\r\n          lv.txt<-paste(\"lv.p1<-ggplot(tmp.dt,aes(x=1,y=Predicted))+geom_line(color=colore)+geom_point(color=colore)+\r\n                        geom_errorbar(aes(ymin = tmp.dt$Predicted.lo, ymax = tmp.dt$Predicted.hi),width = 0.1,color=colore)+\r\n                        geom_ribbon(aes(ymin = tmp.dt$Predicted.lo, ymax = tmp.dt$Predicted.hi), alpha=.2,color=colore)+\r\n                        coord_flip()+theme_bw()+\r\n                        geom_text(aes(x=1.2,y=Predicted),label=paste0(round(tmp.dt$Predicted,2),\r\n                        ' (',round(tmp.dt$Predicted.lo,2),'-',\r\n                        round(tmp.dt$Predicted.hi,2),')'),size=3.5)+\r\n                        scale_x_continuous(name='',limits=c(0.5,1.5),breaks=c(0,2))+\r\n                        scale_y_continuous(name='Prediction',limits=c(-0.2,1.2),breaks=c(0,0.25,0.5,0.75,1))\") \r\n         \r\n          eval(parse(text=lv.txt)) \r\n          \r\n         input$Toteuta \r\n\r\n         lv.p1 \r\n     },width=800,height=500,res=300) \r\n     output$Data<-DT::renderDataTable({ \r\n         tmp.dt<-tee.dt(input) \r\n     tmp.title<-'Data and predictions' \r\n DT::datatable(tmp.dt,\r\n                           extensions = 'Buttons',escape=TRUE,\r\n                           options = list(\r\n                             pageLength = 50,\r\n                             dom = 'Blfrtip',\r\n                             buttons = list(\r\n                               list(extend = 'copy', title = tmp.title),\r\n                               list(extend = 'csv', title = tmp.title),\r\n                               list(extend = 'excel', title = tmp.title),\r\n                               list(extend = 'pdf', title = tmp.title)\r\n                             )\r\n                           )) \r\n     }) \r\n     output$AICTab<- renderPrint({ \r\n       knitr::kable(tmp.dt.AIC,format='html',caption='Compring models with AIC') \r\n      }) \r\n     output$Summary<- renderPrint({ \r\n      if(sum(class(tmp.mallit[[as.numeric(input$Model)]])%in%\"coxph\")>0)lv.testi<-cox.zph(tmp.mallit[[as.numeric(input$Model)]]) \r\n     else{lv.testi<-NULL} \r\n         tmp.ulos.S<-list(summary(tmp.mallit[[as.numeric(input$Model)]]),lv.testi) \r\n          if(is.null(lv.testi)) {names(tmp.ulos.S)<-c('Model','')} \r\n          if(!is.null(lv.testi)) {names(tmp.ulos.S)<-c('Model','Testing PH assumption')} \r\n         cat(\"\\n Current model:\" ,Models.otsikko[as.numeric(input$Model)],\"\\n\\n\") \r\n         tmp.ulos.S \r\n     }) \r\n     output$Info<-renderText({ \r\n          HTML( scan(quiet=TRUE,file=\"ModelInfo.html\",what=\"\"))}) \r\n } \r\n # Run the application \r\n shinyApp(ui = ui, server = server) \r\n","type":"text"},{"name":"ModelInfo.html","content":"<pre>Updated:  2025-05-15 20:58:31 <\/pre>","type":"text"},{"name":"models.RData","content":"H4sIAAAAAAAABu19B5gUxdZ21wZyzkFxkYyykkSR0EsQiYKghIsCyzLA6iY3EIyIIIoBUERB\nyUGyoICo6KwRVFQMYEIBEVBEJBlQgf/0Tr1nek5Pz84i6L3fPzzPobaqq05+T1X3pN4d+zcr\n1r+YYRjRRkxMlBEdS38asTdc36nRlYZBA4ahjBijKLXFslMz4lMTU1KSsw0jqnzeFSPaamtQ\nvxS1RczDrd64fMorU73fFZvebHLdGPPoDW8NPtP2mPnrlz/dub5dD/No3MmZvyw54P3t0LiK\nh5aO8B7vF1fl3YvreP9Yf+Cn50bdKCTGpiWmerLojzIWcz1YvH6XtGxPZpInI7uBHira5+r+\nnTykmkcPlGo3wjP4msz0nIwmjZqOTXeMNmvUnEeL9RzqyUrOHjuAJPlGSvQaOTarXVJ28ij/\nWOVuaemjO3k8w5LTRuTJT6U/E7MhsLTtcufkESNp6LTPKepF7++19r5Yvvu73l9rH3+4zrbr\nzGPXPPnRyz8lmSeTNiwa06yO+duCVd9/WPbe3Nj5X07Y+nX/hNhd19xy47a7zV+X9Dv6RsNp\n3hOHX1q5cfGZhHovPXNg0MR5ucXN1c9Mmf88j+v53qNj1c3VM+tinOUe+enzwfVTNniPvWa+\nN+HJrjz+y8XPVrt4WXHviQF/jW7/0x7vn3flVP5o5jSep9eZv5U4OaLbXcsSypyc02zitDTY\nkWBs6XB83jX3cht98bdPNJi3CfolFH4xJ/ZATCfvbwl9rxv8xQ6Wg/b47n4H1iw/6RjX8nk9\n7IF+uk0oM2rAyUljqvE62A/90bryhdxAf7Hffy/a7IF+LWO9px+r80DixF8RH+/RTT9lvjv0\nPviB9dLzYBfHCXqcvKrWBTFNajMf3ecW8YCeiCv61Vt1+LZ31cc5b053npxcde8PyAvon1vk\njYd75nZvw3pDD+kf6At72F+B/sg1fq3V0Sh9d755hVb7JTeqa5NXP/jzUdd4gB/sR1/4i/0G\nfiKejryX66GnzBM9H/GAn+BfzncZJ70euMB89gtaxtOr7865p/WnnHdCb/OvjHsePfjBN8AP\n+uavsXfvuvz908hH1gv1Aeuq9yrTuF7ZeOCQ7YTd0EfgLKHE9qJ39RjiMY9V2z+uSNkkvu7A\nq/arbiEX8YB+CeXW13zw0zmPc13S9nJ+ivxiu2AH6kjhn1adeaJrEvixXYibzlus88clMI+x\nTuZNQrl9J48PGVKW5R8Zv+P7G4vUlnqxvvCHqHveE902Njr2wO3IH9ZHr8utvOfQzouKfMh1\nAvqj75bfnB8ClxxH5Lkvr8BX6sF14viVxfr1qfQi1+foXX1vaP3wXRwnXUe5Tuj65a+DgfsX\n64n6wfkRuI/IuoTrXE+0/tJvXIeFHRLfMn9YX64nWh+532HfgX+BE8QZcXJpWR/0tX9ZDvST\ncQB+df4wn9NJNz5XYdATfF3jUvoX5wT/+vH7FhRuN1n6gdfpODhwpnHJ87Xech+HHzlvYnPq\nv31T5VUS/1yPYCfON7plvJ7osKFe/6NjuC7Kc4esU2y/qNvYl7Q+rJfeD1ku4qDxnVuy3Rcp\nX1cujbrK6xA/HQeuW9ouR71F/RD1GPszn/PgD1Hf5DnGdR/jvjgf6daR72Kf5fOC9jviCFzi\nOuOU64j2i+bPdYHPQ9pPxoNp3e859AnXr7iid42ovWE/+v7813mqW95nkScCv5wnWh7WyTxj\ne3hcz4uqOHHT119mm8du3rzn4nu/QfwTjH1pq18duoPl6nHEn/WD/WIe70uIt+6bf2yJvnjO\nwUZ+v+l9G3nXZFPDLoMu3Ztbe+29j+z6uTTsgv95n9D7iXnsneNtDn51R0KZua+MHZu0kvXQ\ncpivlsd5d2z9u6Mr1Lie/Y24C7uhN/v3yInXZoxN68frjm64atXndcdzXcL+of0KfrjOrYgX\nWn99031tJ/vveLPNdW5M4usSj+wX2A1/sf6Io48P88X4kY2v7uu1aw/4YB32QY6rzmf4lflr\nfXw3p1Fn6N7uMJH9RrX0MM9wT2amZ9jgrOxMugUUl2OGJmZ59FhJ331z3i3taf+YelGPR+Xd\nitMa6/6XqBBR4bzbX8N3u2rdAls3qZqXdd9dWvMrS1SOyLonr0BUkaiSdfNKVIWoKlE1oupE\nFxBd6Lt3Ny4iiiOqSXQxUS2i2kR1iOoS1SOqT9SAqCHRJUSXEjUiiie6jKgxUROipkTNiJoT\nXU7UgugKoiuJWhJdRdSKqDVRG6K2RCZRAlE7ovZEHYg6El1N1InoGqLORF2IuhJ1I+pO1IPo\nWqKeRL2IriPqTdSH6HqiG4j6EvUj6k80gOg/RAOJbiS6iWgQ0WCiIUSJREOJkoiGEVkxG05k\nxdO6pU8mupnoFqIUolSiNKJ0ogyiW4kyiaxHFtlEOUSjiEYTjSEaS3Qb0e1EdxDdSXQX0d1E\n44juIRpPdC/RBKKJRPcRTSK6n+gBoslEDxI9RPQw0SNEU4imEk0jepToMaLpRI8TzSB6guhJ\noplEs4ieInqaaDbRHKK5RPOI5hMtIFpItIhoMdESomeIlhItI1pOtIJoJdEqotVEzxKtIVpL\n9BzR80TriNYTbSB6gWgjkZXjLxG9TLSJ6BWiV4m8RLlErxG9TvQG0ZtEbxG9TbSZaAvRO0Tv\nEr1HtJXofaIPiD4k2kb0EdHHRJ8QfUq0nWgH0WdEnxN9QfQl0VdEO4m+JvqGaBfRbqI9RN8S\n7SX6jmgf0X6iA0TfE/1AdJDoR6JDRD8ZvlLwM9ERoqNEx4iOE50g+oXoV6LfiH4nOkn0B9Gf\nRH8RnTJ8NeCMD/qK/lOEf0X4V4R/RfhXhH9F+FeEf0X4V4R/RfhXhH9l1Q3rERPhX5UhIvwr\nwr8i/CvCvyL8K8K/Ivwrwr8i/CvCvyL8K8K/Ivwrwr8i/Ks4IsK/Ivwrwr8i/CvCvyL8K8K/\nIvwrwr8i/CvCvyL8K8K/Ivwrwr9qTET4V4R/RfhXhH9F+FeEf0X4V4R/RfhXhH9F+FeEf0X4\nV4R/RfhXCUSEf0X4V4R/RfhXhH9F+FeEf0X4V4R/RfhXhH9F+FeEf0X4V4R/1YuI8K8I/4rw\nrwj/ivCvCP+K8K8I/4rwrwj/ivCvCP+K8K8I/4rwr4YQEf4V4V8R/hXhXxH+FWFfEfYVYV8R\n9hVhXxH2FWFfEfYVYV9lEBH2FWFfEfYVYV8R9hVhXxH2FWFfEfYVYV8R9hVhXxH2FWFfEfbV\nOCLCviLsK8K+Iuwrwr4i7CvCviLsK8K+Iuwrwr4i7CvCviLsK8K+mkpE2FeEfUXYV4R9RdhX\nhH1F2FeEfUXYV4R9RdhXhH1F2FeEfUXYV4R9RdhXhH1F2FeEfUXYV4R9RdhXhH1F2FeEfUXY\nV4R9RdhXhH1F2FeEfUXYV4R9RdhXhH1F2FeEfUXYV4R9a39TFvax/xk69/kxqbl9+pvNp179\nm/nR60VaF2n0qHkoalDTykePm981zFx2RY1XzH3Lpt45fm029z8buSB5z8Njzf2z9vdYsrqF\n+UGDjC9S//jLXP/YqmrzR/VwjGM+rmMccldW7T+23azbzdffN+fXyX2Vxz+sevSN+X2uNN8b\nNLhOk549zC9fG/7pyb5v8zys298iwfvhzNbMF3Z8M77WmqTpn3KL9dAPcj75ZV7uPY9XYTlo\n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\nvyL8K8K/Ivwrwr8i/CvCvyL8K8K/Ivwrwr8i/Ks4IsK/Ivwrwr8i/CvCvyL8K8K/Ivwrwr8i\n/CvCvyL8K8K/Ivwrwr9qTET4V4R/RfhXhH9F+FeEf0X4V4R/RfhXhH9F+FeEf0X4V4R/RfhX\nCUSEf0X4V4R/RfhXhH9F+FeEf0X4V4R/RfhXhH9F+FeEf0X4V4R/1YuI8K8I/4rwrwj/ivCv\nCP+K8K8I/4rwrwj/ivCvCP+K8K8I/4rwr4YQEf4V4V8R/hXhXxH+FWFfEfYVYV8R9hVhXxH2\nFWFfEfYVYV9lEBH2FWFfEfYVYV8R9hVhXxH2FWFfEfYVYV8R9hVhXxH2FWFfEfbVOCLCviLs\nK8K+Iuwrwr4i7CvCviLsK8K+Iuwrwr4i7CvCviLsK8K+mkpE2FeEfUXYV4R9RdhXhH1F2FeE\nfUXYV4R9RdhXhH1F2FeEfUXYV4R9RdhXhH1F2FeEfUXYV4R9RdhXhH1F2FeEfUXYV4R9RdhX\nhH1F2FeEfUXYV4R9RdhXhH1F2FeEfUXYV4R9a39TFvax/xk69ylv/9d/YzZvDy5iHtn+3Z0f\n3dLGPHKy0aA1Fy02j+Q03Lp54wnzSOOWqVvHxJtHH1pZavy4WPNIwx2zxva63Tyyqp+ZNqOK\neaTfR8tu+3Ok5llE8w11DrDkqTaLT929Z+ywGb6zR9QZ7ctYrXbUrZn6r5jMxLRb9N+xt2Ym\n5oxBJyN5VHo2ftY4Oz1F/IxxbFJKYlaW5qtsfPM8kPfLuiXF1SJDk9PSU5MTU8R4bEr6iORs\nIyomWpdBI89EfTErOzEb0YhtHt88vqnQJCo1R5fN09oVzDi+Q2JKivYXBkt0GJwnb3BKctot\nvmtFz+QtzlOgyBn5k86e7MRA/sXOCJal7SyT00b5LpfwcTViECkjCPdCWcmpw3PSfLNKOa6m\nD73Zk5TtEx9wJSYtK++XpqGWdZpr4vO5VfXzToCVdbZcqLOlrla7ktbHomraZRV03zrl1dPZ\nVElnVIy+XkS31inTOtkV13NK2OZYsq2TGE6d1vWyNlnldVtRzy9r+E+WlbXsSnqtdSq1TopV\nbXpV0LZYPNrrNdX1+gu1jRdoOzvYZNt1w6nWkhNn+E6M1qmzluZdW/vV4l1H862nedfV6+pr\nvtachnrOpfr6JZqPdQIeq+fE6zmNddtE69BUr7lM821m43u5nnuFbq/Uc1vouFo+uErbVt/m\n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\nEH1G9DnRF0RfEn1FtJPoa8P3+ZddRLsN32d7viXaS/Qd0T6i/UQHDN/niH4gOkj0I9Ehop8M\nH85/JjpCdJTomOF7pm69Q+0Xol+JfiP6negk0R+G73NZ1sfYTxm+GnBGP7qn/xThXxH+FeFf\nEf4V4V8R/hXhXxH+FeFfEf4V4V/lPa8nIvyrMkSEf0X4V4R/RfhXhH9F+FeEf0X4V4R/RfhX\nhH9F+FeEf0X4V4R/FUdE+FeEf0X4V4R/Rfi3vrxYEf6tX5VQhH9F+FeEf0X4t371WxH+rZ+U\nVo2JCP+K8K8I/4rwrwj/ivCvCP+K8K8I/4rwrwj/1vcSK8K/9ZsjivCvEogI/4rwrwj/ivCv\nCP+K8K8I/4rwrwj/ivCvCP+K8K8I/4rwrwj/qhcR4V8R/hXhXxH+FeFfEf4V4V8R/q1faVeE\nf+v7XRThXxH+FeFfEf7VECLCvyL8K8K/Ivwrwr8i7CvCvvVT84qwrwj7irCvCPuKsK8I+yqD\niLCvCPuKsK8I+4qwrwj7irCvCPuKsK8I+4qwb31JiiLsK8K+IuyrcUSEfUXYV4R9RdhXhH1F\n2FeEfUXYV4R9RdhXhH1F2FeEfUXYV4R9NZWIsK8I+4qwrwj7irCvCPuKsK8I+4qwrwj7irCv\nCPuKsK8I+4qwrwj7irCvCPuKsK8I+4qwrwj7irCvCPuKsK8I+4qwrwj7irCvCPuKsK8I+4qw\nrwj7irCvCPuKsK8I+4qwrwj71v6mLOxj/zN07vOz4IS7rj+5aXrW09y/O68/m/vj37xoSrT6\n3MYjFs9Pza1PPXb9D+Uam+8s69m82EslzZePvjPrj/v6m+9/urLK5klR5nunVerTnV7i/vtr\nJ171fPfbzXcf/Ll/w8JVzc0lf33whjrLzOdfv/DxO78u7hjHfFzHOOQuf2TajLExC8zcYq2X\nTzpelcc3Pzgw/aPPvzLfmtDlzmY7Dpgf1vpldbsbGvM8rHuvUbMyt930CvOFHR8ebtZ88oIN\n/lavh36Q896Yy+MLr/yS5aB9s0qLLR+VS3WMO/TUcsEfrdQf9mM9Wje+GJf+Yv3vWNC3S/0h\nbB/is2Fevfj2FbP9foBeeh7sAh/IRZxknNHCHjlf2oP1H+5b1aH+4Y/Ybva3zifoAz2kf3Ad\n9mBc+gNy8ssrtOyXu5/8YcVPG1zjIfMXfYe/dAt+Mp4y7+V66CnzhOVrf8JP6Ev9JM6AC8yH\n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\nTiym1gEA","type":"binary"}]
